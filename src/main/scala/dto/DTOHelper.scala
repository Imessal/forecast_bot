package dto

import dto.YandexWeatherDTOs.WeatherResponse

object DTOHelper {

    val weatherByCondition = Map(
        "clear"                  -> "—è—Å–Ω–æ ‚òÄÔ∏è",
        "partly-cloudy"          -> "–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ üå§",
        "cloudy"                 -> "–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ ‚õÖÔ∏è",
        "overcast"               -> "–ø–∞—Å–º—É—Ä–Ω–æ ‚òÅÔ∏è",
        "drizzle"                -> "–º–æ—Ä–æ—Å—å üåß",
        "light-rain"             -> "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å üåß",
        "rain"                   -> "–¥–æ–∂–¥—å üåß",
        "moderate-rain"          -> "—É–º–µ—Ä–µ–Ω–Ω–æ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å üåß",
        "heavy-rain"             -> "—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å üåß",
        "continuous-heavy-rain"  -> "–¥–ª–∏—Ç–µ–ª—å–Ω—ã–π —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å üåß",
        "showers"                -> "–ª–∏–≤–µ–Ω—å üåß",
        "wet-snow"               -> "–¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º üå®",
        "light-snow"             -> "–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ üå®",
        "snow"                   -> "—Å–Ω–µ–≥ üå®",
        "snow-showers"           -> "—Å–Ω–µ–≥–æ–ø–∞–¥ üå®",
        "hail"                   -> "–≥—Ä–∞–¥ üåß",
        "thunderstorm"           -> "–≥—Ä–æ–∑–∞ üå©",
        "thunderstorm-with-rain" -> "–¥–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π ‚õà",
        "thunderstorm-with-hail" -> "–≥—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º ‚õà"
    )

    val dayParts = Map(
        "night"   -> "–Ω–æ—á—å",
        "morning" -> "—É—Ç—Ä–æ",
        "day"     -> "–¥–µ–Ω—å",
        "evening" -> "–≤–µ—á–µ—Ä"
    )

    def humidity(percentage: Int): String = {
        if (percentage < 50) {
            s"${percentage}% üíß"
        } else s"$percentage% üí¶"
    }

    def makeDate(dateStr: String): String = {
        dateStr.split('T').head.split('-').reverse.mkString(".")
    }

    def yandexDTOtoMainMessage(dto: WeatherResponse): String = {
        val humidity = DTOHelper.humidity(dto.fact.humidity)

        s"–î–∞—Ç–∞: ${makeDate(dto.now_dt)}\n" ++
            s"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${dto.fact.temp}¬∞ (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ${dto.fact.feels_like}¬∞)\n" ++
            s"${weatherByCondition.getOrElse(dto.fact.condition, "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã").capitalize}\n" ++
            s"–í–µ—Ç–µ—Ä: ${dto.fact.wind_speed} üí®\n" ++
            s"–í–ª–∞–∂–Ω–æ—Å—Ç—å: $humidity\n" ++
            s"–í—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞ –°–æ–ª–Ω—Ü–∞: ${dto.forecast.sunrise} üåÖ\n" ++
            s"–í—Ä–µ–º—è –∑–∞–∫–∞—Ç–∞ –°–æ–ª–Ω—Ü–∞: ${dto.forecast.sunset} üåá"

    }

    def yandexDTOtoForecastMessage(dto: WeatherResponse): String = {
        "–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è: \n\n" ++
            s"${dto.forecast
                    .parts
                    .map { part =>
                        val humidity = DTOHelper.humidity(part.humidity)
                        "*" + dayParts.getOrElse(part.part_name, "–Ω—É –∏ –≤—Ä–µ–º—è —É –≤–∞—Å").capitalize + "*\n" ++
                            s"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${part.temp_avg}¬∞ (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ${part.feels_like}¬∞)\n" ++
                            s"${weatherByCondition.getOrElse(dto.fact.condition, "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã").capitalize}\n" ++
                            s"–í–µ—Ç–µ—Ä: ${dto.fact.wind_speed} üí®\n" ++
                            s"–í–ª–∞–∂–Ω–æ—Å—Ç—å: $humidity\n" ++
                            s"–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–ø–∞–¥–µ–Ω–∏—è –æ—Å–∞–¥–∫–æ–≤: ${part.prec_prob}% \n"
                    }
                    .mkString("\n")}"
    }
}
